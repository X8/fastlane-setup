# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.48.0"

default_platform :ios

certPath    = './Certificates/'
appId       = 'io.x8.flsetup'
appName     = 'flsetup'
language    = 'English'
teamName    = 'X8 Ltd'
sku         = '123abc'
appVersion  = '0.1'

scheme      = 'flsetup'
project     = './flsetup/flsetup.xcodeproj'

platform :ios do
  before_all do

    ENV["HIPCHAT_API_TOKEN"] = "2f98d475881a351b26d8d1f0cdb59e"
    ENV["HIPCHAT_API_VERSION"] = "1"

    # increment_build_number

    # xctool # run the tests of your app
  end

  desc "Creating an app, code signing certificate and provisioning profiles, PN certs"

  lane :initApp do
    produce(
    app_identifier: appId,
    app_name:       appName,
    language:       language,
    app_version:    appVersion,
    sku:            sku,
    team_name:      teamName,
    skip_itc:       true
    )
    produce(
    app_identifier: appId,
    app_name:       appName,
    language:       language,
    app_version:    appVersion,
    sku:            sku,
    team_name:      teamName,
    skip_devcenter: true
    )
    cert(development: true, output_path: certPath)
    sigh(development: true, output_path: certPath)
    pem(development: true, output_path: certPath)
    cert(output_path: certPath)
    sigh(adhoc: true, output_path: certPath)
    sigh(force: true, output_path: certPath)
    pem(output_path: certPath)
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    scan(
      project:  project,
      scheme:   scheme
    )
    sigh
    gym(
      project:          project,
      scheme:           scheme,
      output_directory: './build',
      output_name:      'FLSetup'
      )
      pilot(
        ipa: './build/FLSetup.ipa'
      )
    end

    desc "Deploy version to the App Store along with all metadata and screenshots"
    lane :full_deploy do
      snapshot(
        scheme:             'flsetup',
        reinstall_app:      true,
        app_identifier:     appId,
        skip_open_summary:  true
      )
      scan(
        project:  project,
        scheme:   scheme
      )
      sigh
      gym(
        clean: true,
        silent: true,
        project:          project,
        scheme:           scheme,
        output_directory: './build',
        output_name:      'FLSetup'
        )
      deliver(
        force: true,
        screenshots_path: './screenshots',
        ipa: './build'
      )
    end

    desc "Deploy a new version to the App Store without updating metadata or screenshots"
    lane :deploy do
      sigh
      gym(
        clean: true,
        silent: true,
        scheme: "greatkiddo",
        output_directory: './build',
        output_name:      'FLSetup'
      )
      deliver(
        force: true,
        skip_metadata: true,
        skip_screenshots: true,
        ipa: './build/FLSetup.ipa'
      )
    end


## This section is for test lanes that won't be used during normal process

desc "Test and create .ipa"
lane :build do
  scan(
    project:  project,
    scheme:   scheme
  )
  sigh
  gym(
    project:          project,
    scheme:           scheme,
    output_directory: './build',
    output_name:      'FLSetup'
    )

    hipchat(
      message: "App successfully tested and build locally",
      channel: "fastlane-test",
      success: true
    )
end


desc "Deliver app"
lane :deliver do
  deliver(
    force: true,
    screenshots_path: './screenshots',
    ipa: './build/FLSetup.ipa'
  )
end

  desc "Making screenshots for supported devices"

  lane :screenshot do
    snapshot(scheme: 'flsetup', reinstall_app: true, app_identifier: appId)
  end

#https://github.com/fastlane/pilot/issues/85
  desc "Add new tester and sent application to TestFlight testers"
  lane :pilot do
    pilot(
      ipa: './build/FLSetup.ipa'
    )
  end

  desc "Run tests"
  lane :test do
    scan(
      project:  project,
      scheme:   scheme
    )

    hipchat(
      message: "Test passed",
      channel: "fastlane",
      success: true
    )
  end



  error do |lane, exception|

  end
end
